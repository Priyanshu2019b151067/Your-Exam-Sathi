package auth_main.models;

import java.math.BigInteger;
import java.time.LocalDate;
import java.util.UUID;

import org.springframework.data.annotation.Id;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Index;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotBlank;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;




@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Entity
@Table(name = "user_tbl",
indexes = {
		@Index(name = "idx_username", columnList = "userName"),
        @Index(name = "idx_email", columnList = "email")
},	
uniqueConstraints = {
		@UniqueConstraint(columnNames = "userName"),
        @UniqueConstraint(columnNames = "email")
}
)
		
public class User {
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
    @Column(columnDefinition = "BINARY(16)")
	private UUID id;
	
	@Column(nullable = false,unique= true)
	@NotBlank(message = "Username is required")
	private String userName;
	
	@Column(nullable = false, unique = true)
	@NotBlank(message = "Email is required")
    private String email;
	
	@Column(nullable = false)
	@NotBlank(message = "Password is required")
	private String password;
	
	@OneToOne(mappedBy = "user",cascade = CascadeType.ALL)
	private Profile profile;
}
